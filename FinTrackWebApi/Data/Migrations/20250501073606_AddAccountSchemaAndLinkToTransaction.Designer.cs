// <auto-generated />
using System;
using FinTrackWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinTrackWebApi.Data.Migrations
{
    [DbContext(typeof(MyDataContext))]
    [Migration("20250501073606_AddAccountSchemaAndLinkToTransaction")]
    partial class AddAccountSchemaAndLinkToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinTrackWebApi.Models.AccountModel", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Balance");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreateAt");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("AccountType");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdateAt");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.BudgetCategoryModel", b =>
                {
                    b.Property<int>("BudgetCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BudgetCategoryId"));

                    b.Property<decimal>("AllocatedAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("AllocatedAmount");

                    b.Property<int>("BudgetId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("BudgetCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("BudgetId", "CategoryId")
                        .IsUnique();

                    b.ToTable("BudgetCategories", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.BudgetModel", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BudgetId"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAtUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("BudgetName");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAtUtc");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("BudgetId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.CategoryModel", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CategoryName");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CategoryType");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId");

                    b.HasIndex("UserId", "Name", "Type")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.OtpVerificationModel", b =>
                {
                    b.Property<int>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OtpId"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreateAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ExpireAt");

                    b.Property<string>("OtpCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OtpCode");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProfilePicture");

                    b.Property<int?>("UserModelUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Username");

                    b.HasKey("OtpId");

                    b.HasIndex("Email");

                    b.HasIndex("UserModelUserId");

                    b.ToTable("OtpVerification", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.TransactionModel", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer")
                        .HasColumnName("AccountId");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Amount");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TransactionType");

                    b.Property<DateTime>("TransactionDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TransactionDate");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TransactionDateUtc");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreateAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProfilePicture");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Username");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.UserSettingsModel", b =>
                {
                    b.Property<int>("SettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SettingsId"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Currency");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EntryDate");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Language");

                    b.Property<bool>("Notification")
                        .HasColumnType("boolean")
                        .HasColumnName("Notification");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Theme");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SettingsId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings", (string)null);
                });

            modelBuilder.Entity("FinTrackWebApi.Models.AccountModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.UserModel", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.BudgetCategoryModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.BudgetModel", "Budget")
                        .WithMany("BudgetCategories")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinTrackWebApi.Models.CategoryModel", "Category")
                        .WithMany("BudgetAllocations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.BudgetModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.UserModel", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.CategoryModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.UserModel", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.OtpVerificationModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.UserModel", null)
                        .WithMany("OtpVerifications")
                        .HasForeignKey("UserModelUserId");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.TransactionModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.AccountModel", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinTrackWebApi.Models.CategoryModel", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinTrackWebApi.Models.UserModel", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.UserSettingsModel", b =>
                {
                    b.HasOne("FinTrackWebApi.Models.UserModel", "User")
                        .WithOne("Settings")
                        .HasForeignKey("FinTrackWebApi.Models.UserSettingsModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.AccountModel", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.BudgetModel", b =>
                {
                    b.Navigation("BudgetCategories");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.CategoryModel", b =>
                {
                    b.Navigation("BudgetAllocations");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinTrackWebApi.Models.UserModel", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("OtpVerifications");

                    b.Navigation("Settings");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
