events {
    worker_connections 1024;
    worker_rlimit_nofile 2048;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Log formatı
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Performans ayarları
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip sıkıştırma
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    server {
        listen 80;
        server_name localhost;
        
        # Ana sayfa
        root /usr/share/nginx/html;
        index index.html;
        
        # Güvenlik headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Ana sayfa - Backup Monitor Dashboard
        location / {
            try_files $uri $uri/ =404;
            
            # Cache control
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1M;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Log dosyaları
        location /logs/ {
            alias /var/log/pgbackrest/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            # Log dosyaları için özel styling
            add_before_body /logs_header.html;
            add_after_body /logs_footer.html;
            
            # Sadece log dosyalarına erişim izni
            location ~* \.(log|txt)$ {
                add_header Content-Type text/plain;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
            
            # Diğer dosya türlerini engelle
            location ~* \.(sh|conf|key|pem)$ {
                deny all;
                return 403;
            }
        }
        
        # API endpoint - Backup status JSON
        location /api/status {
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache";
            
            # Basit status response
            return 200 '{"status": "active", "timestamp": "$time_iso8601", "message": "Backup system is running"}';
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "OK - FinTrack Backup Monitor is healthy\n";
        }
        
        # Favicon
        location /favicon.ico {
            return 204;
            access_log off;
            log_not_found off;
        }
        
        # Robots.txt
        location /robots.txt {
            return 200 "User-agent: *\nDisallow: /logs/\nDisallow: /api/\n";
            add_header Content-Type text/plain;
        }
        
        # 404 sayfası
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # 50x sayfası
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Access log
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
    }
}